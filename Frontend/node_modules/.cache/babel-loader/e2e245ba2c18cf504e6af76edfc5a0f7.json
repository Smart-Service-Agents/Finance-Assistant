{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Finance-Assistant\\\\Frontend\\\\src\\\\App.jsx\";\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport './App.css';\nconst convertYouTubeToEmbed = url => {\n  try {\n    const urlObj = new URL(url);\n    const videoId = urlObj.searchParams.get('v');\n    if (videoId) {\n      return `https://www.youtube.com/embed/${videoId}`;\n    }\n    if (urlObj.hostname === 'youtu.be') {\n      return `https://www.youtube.com/embed${urlObj.pathname}`;\n    }\n    return url;\n  } catch (err) {\n    console.warn('Invalid video URL:', url);\n    return '';\n  }\n};\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [username, setUser] = useState('');\n  const [password, setKey] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n  const [showAuthModal, setShowAuthModal] = useState(false);\n  const [chats, setChats] = useState([]);\n  const [activeChatIndex, setActiveChatIndex] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingDots, setTypingDots] = useState('.');\n  useEffect(() => {\n    let interval;\n    if (isTyping) {\n      interval = setInterval(() => {\n        setTypingDots(prev => prev.length < 3 ? prev + '.' : '.');\n      }, 300);\n    } else {\n      setTypingDots('.');\n    }\n    return () => clearInterval(interval);\n  }, [isTyping]);\n  const typeBotMessage = (text, embedUrl) => {\n    return new Promise(resolve => {\n      const words = text.split(' ');\n      let currentText = '';\n      let index = 0;\n      const interval = setInterval(() => {\n        if (index >= words.length) {\n          clearInterval(interval);\n          setChats(prev => {\n            const updatedChats = [...prev];\n            const currentMessages = [...updatedChats[activeChatIndex].messages];\n            currentMessages[currentMessages.length - 1].text = currentText;\n            currentMessages[currentMessages.length - 1].showVideo = true;\n            updatedChats[activeChatIndex].messages = currentMessages;\n            return updatedChats;\n          });\n          setMessages(prev => {\n            const updated = [...prev];\n            updated[updated.length - 1].text = currentText;\n            updated[updated.length - 1].showVideo = true;\n            return updated;\n          });\n          setIsTyping(false);\n          return;\n        }\n        currentText += (index > 0 ? ' ' : '') + words[index];\n        index++;\n        setMessages(prev => {\n          const updated = [...prev];\n          updated[updated.length - 1].text = currentText;\n          return updated;\n        });\n        setChats(prev => {\n          const updatedChats = [...prev];\n          const currentMessages = [...updatedChats[activeChatIndex].messages];\n          currentMessages[currentMessages.length - 1].text = currentText;\n          updatedChats[activeChatIndex].messages = currentMessages;\n          return updatedChats;\n        });\n        if (index == words.length) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, 150);\n    });\n  };\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    if (activeChatIndex === null) {\n      const title = input.trim().split(' ').slice(0, 4).join(' ') + (input.trim().split(' ').length > 4 ? '...' : '');\n      const newChat = {\n        title,\n        messages: []\n      };\n      const newChats = [...chats, newChat];\n      const newIndex = newChats.length - 1;\n      setChats(newChats);\n      setActiveChatIndex(newIndex);\n      setMessages([]);\n      setTimeout(() => {\n        setChats(prevChats => {\n          const updated = [...prevChats];\n          updated[newIndex].messages.push({\n            from: 'user',\n            text: input\n          });\n          return updated;\n        });\n        setMessages([{\n          from: 'user',\n          text: input\n        }]);\n        processBotResponse(input, newIndex);\n      }, 0);\n      setInput('');\n      return;\n    }\n    const newMessages = [...messages, {\n      from: 'user',\n      text: input\n    }];\n    setMessages(newMessages);\n    setChats(prev => {\n      const updated = [...prev];\n      updated[activeChatIndex].messages = newMessages;\n      return updated;\n    });\n    setInput('');\n    setIsTyping(true);\n    await processBotResponse(input, activeChatIndex);\n    uploadMsgs();\n  };\n  const processBotResponse = async (inputText, chatIndex) => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/chatbot/messages/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: inputText\n        })\n      });\n      const data = await response.json();\n      const embedUrl = convertYouTubeToEmbed(data.video);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: '',\n        video: embedUrl,\n        showVideo: false\n      }]);\n      setChats(prev => {\n        const updated = [...prev];\n        updated[chatIndex].messages.push({\n          from: 'bot',\n          text: '',\n          video: embedUrl,\n          showVideo: false\n        });\n        return updated;\n      });\n      await typeBotMessage(data.text, embedUrl);\n    } catch (error) {\n      console.error('Error fetching bot response:', error);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: 'The backend can not be reached as of now, please try again later.'\n      }]);\n    }\n  };\n  const switchChat = index => {\n    setActiveChatIndex(index);\n    setMessages(chats[index].messages);\n  };\n  const deleteChat = index => {\n    var _updatedChats$newInde;\n    const updatedChats = chats.filter((_, i) => i !== index);\n    const newIndex = updatedChats.length ? 0 : null;\n    setChats(updatedChats);\n    setActiveChatIndex(newIndex);\n    setMessages(((_updatedChats$newInde = updatedChats[newIndex]) === null || _updatedChats$newInde === void 0 ? void 0 : _updatedChats$newInde.messages) || []);\n  };\n  const createNewConversation = () => {\n    const newChat = {\n      title: `Chat ${chats.length + 1}`,\n      messages: []\n    };\n    const newChats = [...chats, newChat];\n    setChats(newChats);\n    setActiveChatIndex(newChats.length - 1);\n    setMessages([]);\n  };\n  const signup = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/chatbot/sign-up/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          uid: username,\n          pass: password,\n          key: 'rey-master-eo'\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        if (data['status'] === 200) {\n          setCurrentUser(data.user || username);\n          setShowAuthModal(false);\n        }\n      } else {\n        console.error('Signup failed:', data.error || data);\n      }\n    } catch (err) {\n      console.error('Error during signup:', err);\n    }\n  };\n  const login = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/chatbot/login/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          uid: username,\n          pass: password,\n          key: 'rey-master-eo'\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log();\n        if (data['status'] === 200) {\n          setCurrentUser(data.user || username);\n          setShowAuthModal(false);\n          loadMsgs(data.user || username);\n        }\n      } else {\n        console.error('Login failed:', data.error || data);\n      }\n    } catch (err) {\n      console.error('Error during login:', err);\n    }\n  };\n  const uploadMsgs = async () => {\n    if (!currentUser) {\n      console.log(\"No signed in user found\");\n      return;\n    }\n    try {\n      const curr_chat = chats[activeChatIndex];\n      console.log(\"Upload:\", chats);\n      console.log(\"Upload:\", curr_chat);\n      const curr_messages = curr_chat['messages'];\n      const length = curr_messages.length;\n      const question = curr_messages[length - 3]['text'];\n      const answer = curr_messages[length - 1]['text'];\n      const video = curr_messages[length - 2]['video'];\n      const chat_id = curr_chat['title'];\n      const response = await fetch('http://127.0.0.1:8000/api/chatbot/save/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          uid: currentUser,\n          question: question,\n          answer: answer,\n          video: video,\n          cid: chat_id,\n          key: 'rey-master-eo'\n        })\n      });\n      if (response.ok) console.log(\"Messages upload successful\");\n    } catch (err) {\n      console.error('Error while uploading chats to Database:', err);\n    }\n  };\n  const loadMsgs = async currUser => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/chatbot/load/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          uid: currUser,\n          key: 'rey-master-eo'\n        })\n      });\n      if (!response.ok) {\n        console.error('Failed to load:', await response.text());\n        return;\n      }\n      const {\n        conversations\n      } = await response.json();\n      const chatMap = new Map();\n      for (const conversation of conversations) {\n        const chat = conversation['chat_id'];\n        if (!chatMap.has(chat)) {\n          chatMap.set(chat, {\n            title: chat,\n            messages: []\n          });\n        }\n        const chatObj = chatMap.get(chat);\n        chatObj.messages.push({\n          from: 'user',\n          text: conversation['question']\n        });\n        chatObj.messages.push({\n          from: 'bot',\n          text: conversation['answer'],\n          video: conversation['video'],\n          showVideo: true\n        });\n      }\n      const loadedChats = Array.from(chatMap.values());\n      setChats(loadedChats);\n      if (loadedChats.length > 0) {\n        setActiveChatIndex(0);\n        setMessages(loadedChats[0].messages);\n      }\n    } catch (err) {\n      console.error('Error while loading chats:', err);\n    }\n  };\n  const deleteChatDB = async currUser => {\n    try {} catch (err) {\n      console.err('Error while deleting chat from database:', err);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex vh-100 flex-column\",\n    style: {\n      backgroundColor: '#0b1a2b',\n      color: 'white',\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '0 0 6%',\n      borderBottom: '1px solid #334155',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      padding: '0 1rem',\n      backgroundColor: '#0f172a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-white mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }\n  }, \"Hotel FinanceGPT\"), currentUser ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-light\",\n    style: {\n      borderRadius: '20px',\n      pointerEvents: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  }, currentUser) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-light\",\n    onClick: () => setShowAuthModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  }, \"Login / Signup\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-grow-1\",\n    style: {\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '0 0 20%',\n      borderRight: '1px solid #334155',\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: '#0f172a',\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-3 py-2 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    className: \"w-100 text-white rounded\",\n    style: {\n      backgroundColor: '#28a745',\n      borderColor: '#218838'\n    },\n    onClick: createNewConversation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 11\n    }\n  }, \"New Conversation\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '1 1 auto',\n      padding: '10px',\n      overflowY: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }\n  }, chats.map((chat, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    key: idx,\n    className: \"position-relative mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"dark\",\n    className: `w-100 text-start text-white rounded ${activeChatIndex === idx ? 'border border-success' : ''}`,\n    style: {\n      borderRadius: '10px',\n      backgroundColor: 'transparent'\n    },\n    onClick: () => switchChat(idx),\n    onMouseEnter: e => e.currentTarget.style.border = '1px solid #475569',\n    onMouseLeave: e => {\n      if (activeChatIndex !== idx) {\n        e.currentTarget.style.border = '1px solid transparent';\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 15\n    }\n  }, chat.title, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"position-absolute end-0 top-0 mt-1 me-1\",\n    style: {\n      cursor: 'pointer',\n      padding: '2px 6px'\n    },\n    onClick: e => {\n      e.stopPropagation();\n      deleteChat(idx);\n    },\n    onMouseEnter: e => e.currentTarget.style.background = 'red',\n    onMouseLeave: e => e.currentTarget.style.background = 'transparent',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDDD1\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '0 0 5%',\n      borderTop: '1px solid #334155'\n    },\n    className: \"d-flex align-items-center px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 11\n    }\n  }, \"FinanceGPT v1.0\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column\",\n    style: {\n      flex: '1 1 auto',\n      backgroundColor: '#0b1a2b',\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-scrollbar\",\n    style: {\n      width: '70%',\n      margin: '0 auto',\n      flex: '1 1 auto',\n      padding: '10px',\n      overflowY: 'auto',\n      overflowX: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 9\n    }\n  }, messages.map((msg, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    key: idx,\n    className: `mb-2 d-flex ${msg.from === 'bot' ? 'justify-content-start' : 'justify-content-end'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: msg.from === 'bot' ? '#1e293b' : '#10b981',\n      color: 'white',\n      padding: '10px',\n      borderRadius: '10px',\n      maxWidth: '75%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 17\n    }\n  }, msg.text), msg.from === 'bot' && msg.showVideo && msg.video && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"100%\",\n    height: \"400\",\n    src: msg.video,\n    title: \"Related Video\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 21\n    }\n  }))))), isTyping && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: '#1e293b',\n      color: 'white',\n      padding: '10px',\n      borderRadius: '10px',\n      maxWidth: '75%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 15\n    }\n  }, \"Typing\", typingDots))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-3 border-top d-flex justify-content-center\",\n    style: {\n      backgroundColor: '#0f172a',\n      flex: '0 0 auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '70%',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control me-2\",\n    placeholder: \"Ask your finance coach...\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onKeyPress: e => e.key === 'Enter' && sendMessage(),\n    style: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 13\n    }\n  }, \"Send\"))))), showAuthModal && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade show\",\n    style: {\n      display: 'block',\n      backgroundColor: 'rgba(0,0,0,0.5)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog modal-dialog-centered\",\n    style: {\n      maxWidth: '400px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    style: {\n      backgroundColor: '#1e293b',\n      color: 'white',\n      textAlign: 'center',\n      height: '350px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header justify-content-between border-0 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"modal-title mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 15\n    }\n  }, \"Hotel FinanceGPT\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-close btn-close-white\",\n    onClick: () => setShowAuthModal(false),\n    style: {\n      position: 'absolute',\n      right: '1rem',\n      top: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body d-flex flex-column justify-content-start px-4\",\n    style: {\n      flexGrow: 1,\n      paddingTop: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control mb-3 text-center\",\n    placeholder: \"Username\",\n    value: username,\n    onChange: e => setUser(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control mb-4 text-center\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => setKey(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer justify-content-center border-0 pb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: login,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 15\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-light\",\n    onClick: signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 15\n    }\n  }, \"Sign up\"))))));\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Button","convertYouTubeToEmbed","url","urlObj","URL","videoId","searchParams","get","hostname","pathname","err","console","warn","App","messages","setMessages","input","setInput","username","setUser","password","setKey","currentUser","setCurrentUser","showAuthModal","setShowAuthModal","chats","setChats","activeChatIndex","setActiveChatIndex","isTyping","setIsTyping","typingDots","setTypingDots","interval","setInterval","prev","length","clearInterval","typeBotMessage","text","embedUrl","Promise","resolve","words","split","currentText","index","updatedChats","currentMessages","showVideo","updated","sendMessage","trim","title","slice","join","newChat","newChats","newIndex","setTimeout","prevChats","push","from","processBotResponse","newMessages","uploadMsgs","inputText","chatIndex","response","fetch","method","headers","body","JSON","stringify","data","json","video","error","switchChat","deleteChat","_updatedChats$newInde","filter","_","i","createNewConversation","signup","uid","pass","key","ok","user","login","log","loadMsgs","curr_chat","curr_messages","question","answer","chat_id","cid","currUser","conversations","chatMap","Map","conversation","chat","has","set","chatObj","loadedChats","Array","values","deleteChatDB","createElement","className","style","backgroundColor","color","overflow","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","flex","borderBottom","display","alignItems","justifyContent","padding","variant","borderRadius","pointerEvents","onClick","borderRight","flexDirection","borderColor","overflowY","map","idx","onMouseEnter","e","currentTarget","border","onMouseLeave","cursor","stopPropagation","background","borderTop","width","margin","overflowX","msg","maxWidth","height","src","frameBorder","allow","allowFullScreen","type","placeholder","value","onChange","target","onKeyPress","flexGrow","textAlign","position","right","top","paddingTop"],"sources":["D:/Projects/Finance-Assistant/Frontend/src/App.jsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport './App.css';\r\n\r\nconst convertYouTubeToEmbed = (url) => {\r\n  try {\r\n    const urlObj = new URL(url);\r\n    const videoId = urlObj.searchParams.get('v');\r\n    if (videoId) {\r\n      return `https://www.youtube.com/embed/${videoId}`;\r\n    }\r\n    if (urlObj.hostname === 'youtu.be') {\r\n      return `https://www.youtube.com/embed${urlObj.pathname}`;\r\n    }\r\n    return url;\r\n  } catch (err) {\r\n    console.warn('Invalid video URL:', url);\r\n    return '';\r\n  }\r\n};\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  \r\n  const [username, setUser] = useState('');\r\n  const [password, setKey] = useState('');\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [showAuthModal, setShowAuthModal] = useState(false);\r\n  \r\n  const [chats, setChats] = useState([]);\r\n  const [activeChatIndex, setActiveChatIndex] = useState(null);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [typingDots, setTypingDots] = useState('.');\r\n\r\n  \r\n  useEffect(() => {\r\n    let interval;\r\n    if (isTyping) {\r\n      interval = setInterval(() => {\r\n        setTypingDots((prev) => (prev.length < 3 ? prev + '.' : '.'));\r\n      }, 300);\r\n    } else {\r\n      setTypingDots('.');\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isTyping]);\r\n\r\n  const typeBotMessage = (text, embedUrl) => {\r\n    return new Promise((resolve) => {\r\n        const words = text.split(' ');\r\n        let currentText = '';\r\n        let index = 0;\r\n\r\n        const interval = setInterval(() => {\r\n          if (index >= words.length) {\r\n            clearInterval(interval);\r\n            setChats((prev) => {\r\n              const updatedChats = [...prev];\r\n              const currentMessages = [...updatedChats[activeChatIndex].messages];\r\n              currentMessages[currentMessages.length - 1].text = currentText;\r\n              currentMessages[currentMessages.length - 1].showVideo = true;\r\n              updatedChats[activeChatIndex].messages = currentMessages;\r\n              return updatedChats;\r\n            });\r\n            setMessages((prev) => {\r\n              const updated = [...prev];\r\n              updated[updated.length - 1].text = currentText;\r\n              updated[updated.length - 1].showVideo = true;\r\n              return updated;\r\n            });\r\n            setIsTyping(false);\r\n            return;\r\n          }\r\n        \r\n          currentText += (index > 0 ? ' ' : '') + words[index];\r\n          index++;\r\n        \r\n          setMessages((prev) => {\r\n            const updated = [...prev];\r\n            updated[updated.length - 1].text = currentText;\r\n            return updated;\r\n          });\r\n        \r\n          setChats((prev) => {\r\n            const updatedChats = [...prev];\r\n            const currentMessages = [...updatedChats[activeChatIndex].messages];\r\n            currentMessages[currentMessages.length - 1].text = currentText;\r\n            updatedChats[activeChatIndex].messages = currentMessages;\r\n            return updatedChats;\r\n          });\r\n\r\n          if (index == words.length){\r\n            clearInterval(interval);\r\n            resolve();\r\n          }\r\n\r\n        }, 150);\r\n      }\r\n    )\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    if (activeChatIndex === null) {\r\n      const title = input.trim().split(' ').slice(0, 4).join(' ') + (input.trim().split(' ').length > 4 ? '...' : '');\r\n      const newChat = { title, messages: [] };\r\n      const newChats = [...chats, newChat];\r\n      const newIndex = newChats.length - 1;\r\n      setChats(newChats);\r\n      setActiveChatIndex(newIndex);\r\n      setMessages([]);\r\n      setTimeout(() => {\r\n        setChats((prevChats) => {\r\n          const updated = [...prevChats];\r\n          updated[newIndex].messages.push({ from: 'user', text: input });\r\n          return updated;\r\n        });\r\n        setMessages([{ from: 'user', text: input }]);\r\n        processBotResponse(input, newIndex);\r\n      }, 0);\r\n      setInput('');\r\n      return;\r\n    }\r\n\r\n    const newMessages = [...messages, { from: 'user', text: input }];\r\n    setMessages(newMessages);\r\n    setChats((prev) => {\r\n      const updated = [...prev];\r\n      updated[activeChatIndex].messages = newMessages;\r\n      return updated;\r\n    });\r\n    setInput('');\r\n    setIsTyping(true);\r\n\r\n    await processBotResponse(input, activeChatIndex);\r\n    uploadMsgs()\r\n  };\r\n\r\n  const processBotResponse = async (inputText, chatIndex) => {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:8000/api/chatbot/messages/', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ text: inputText }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const embedUrl = convertYouTubeToEmbed(data.video);\r\n\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { from: 'bot', text: '', video: embedUrl, showVideo: false },\r\n      ]);\r\n\r\n      setChats((prev) => {\r\n        const updated = [...prev];\r\n        updated[chatIndex].messages.push({ from: 'bot', text: '', video: embedUrl, showVideo: false });\r\n        return updated;\r\n      });\r\n\r\n      \r\n      await typeBotMessage(data.text, embedUrl);\r\n    } catch (error) {\r\n      console.error('Error fetching bot response:', error);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { from: 'bot', text: 'The backend can not be reached as of now, please try again later.' },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const switchChat = (index) => {\r\n    setActiveChatIndex(index);\r\n    setMessages(chats[index].messages);\r\n  };\r\n\r\n  const deleteChat = (index) => {\r\n    const updatedChats = chats.filter((_, i) => i !== index);\r\n    const newIndex = updatedChats.length ? 0 : null;\r\n    setChats(updatedChats);\r\n    setActiveChatIndex(newIndex);\r\n    setMessages(updatedChats[newIndex]?.messages || []);\r\n  };\r\n\r\n  const createNewConversation = () => {\r\n    const newChat = { title: `Chat ${chats.length + 1}`, messages: [] };\r\n    const newChats = [...chats, newChat];\r\n    setChats(newChats);\r\n    setActiveChatIndex(newChats.length - 1);\r\n    setMessages([]);\r\n  };\r\n\r\n  const signup = async () => {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:8000/api/chatbot/sign-up/', {\r\n        method: 'POST', headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ uid: username, pass: password, key: 'rey-master-eo' })\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        if (data['status'] === 200){\r\n          setCurrentUser(data.user || username);\r\n          setShowAuthModal(false);\r\n        }\r\n      } else {\r\n        console.error('Signup failed:', data.error || data);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error during signup:', err);\r\n    }\r\n  };\r\n\r\n  const login = async () => {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:8000/api/chatbot/login/', {\r\n        method: 'POST', headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ uid: username, pass: password, key: 'rey-master-eo' })\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        console.log()\r\n        if (data['status'] === 200){\r\n          setCurrentUser(data.user || username);\r\n          setShowAuthModal(false);\r\n          loadMsgs(data.user || username);\r\n        }\r\n      } else {\r\n        console.error('Login failed:', data.error || data);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error during login:', err);\r\n    }\r\n  };\r\n\r\n  const uploadMsgs = async () => {\r\n    if (!currentUser) {\r\n      console.log(\"No signed in user found\");\r\n      return;\r\n    }\r\n    try{\r\n      const curr_chat = chats[activeChatIndex];\r\n      \r\n      console.log(\"Upload:\", chats);\r\n      console.log(\"Upload:\", curr_chat);\r\n\r\n      const curr_messages = curr_chat['messages'];\r\n      \r\n      const length = curr_messages.length;\r\n      \r\n      const question = curr_messages[length - 3]['text'];\r\n      const answer = curr_messages[length - 1]['text'];\r\n      const video = curr_messages[length - 2]['video'];\r\n      const chat_id = curr_chat['title'];\r\n\r\n      const response = await fetch('http://127.0.0.1:8000/api/chatbot/save/', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          uid:currentUser,\r\n          question:question,\r\n          answer:answer,\r\n          video:video,\r\n          cid:chat_id,\r\n          key: 'rey-master-eo'\r\n        })\r\n      });\r\n\r\n      if (response.ok) console.log(\"Messages upload successful\");\r\n    } catch (err) {\r\n      console.error('Error while uploading chats to Database:', err);\r\n    }\r\n  };\r\n\r\nconst loadMsgs = async (currUser) => {\r\n  try {\r\n    const response = await fetch('http://127.0.0.1:8000/api/chatbot/load/', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({ uid: currUser, key: 'rey-master-eo' }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      console.error('Failed to load:', await response.text());\r\n      return;\r\n    }\r\n\r\n    const { conversations } = await response.json();\r\n\r\n    const chatMap = new Map();\r\n    for (const conversation of conversations){\r\n      const chat = conversation['chat_id']; \r\n      \r\n      if (!chatMap.has(chat)){\r\n        chatMap.set(chat, {title: chat, messages: [] });\r\n      }\r\n\r\n      const chatObj = chatMap.get(chat);\r\n      chatObj.messages.push({from:'user', text: conversation['question']});\r\n      chatObj.messages.push({from:'bot', text: conversation['answer'], video: conversation['video'], showVideo: true})\r\n    }\r\n\r\n    const loadedChats = Array.from(chatMap.values());\r\n    setChats(loadedChats);\r\n\r\n    if (loadedChats.length > 0){\r\n      setActiveChatIndex(0);\r\n      setMessages(loadedChats[0].messages);\r\n    }\r\n  } catch (err) {\r\n    console.error('Error while loading chats:', err);\r\n  }\r\n};\r\n\r\nconst deleteChatDB = async (currUser) => {\r\n  try{\r\n\r\n  } catch (err){\r\n    console.err('Error while deleting chat from database:', err);\r\n  }\r\n};\r\n\r\n\r\nreturn (\r\n  <div\r\n    className=\"d-flex vh-100 flex-column\"\r\n    style={{\r\n      backgroundColor: '#0b1a2b',\r\n      color: 'white',\r\n      overflow: 'hidden',\r\n    }}\r\n  >\r\n    {/* ───── Header ───── */}\r\n    <div\r\n      style={{\r\n        flex: '0 0 6%',\r\n        borderBottom: '1px solid #334155',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: '0 1rem',\r\n        backgroundColor: '#0f172a',\r\n      }}\r\n    >\r\n      <h5 className=\"text-white mb-0\">Hotel FinanceGPT</h5>\r\n      {currentUser ? (\r\n        <Button variant=\"outline-light\" style={{ borderRadius: '20px', pointerEvents: 'none' }}>\r\n          {currentUser}\r\n        </Button>\r\n      ) : (\r\n        <Button variant=\"outline-light\" onClick={() => setShowAuthModal(true)}>\r\n          Login / Signup\r\n        </Button>\r\n      )}\r\n    </div>\r\n\r\n    {/* ───── Main area: sidebar + chat ───── */}\r\n    <div className=\"d-flex flex-grow-1\" style={{ overflow: 'hidden' }}>\r\n      {/* Sidebar */}\r\n      <div\r\n        style={{\r\n          flex: '0 0 20%',\r\n          borderRight: '1px solid #334155',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          backgroundColor: '#0f172a',\r\n          overflow: 'hidden',\r\n        }}\r\n      >\r\n        <div className=\"px-3 py-2 text-center\">\r\n          <Button\r\n            variant=\"success\"\r\n            className=\"w-100 text-white rounded\"\r\n            style={{ backgroundColor: '#28a745', borderColor: '#218838' }}\r\n            onClick={createNewConversation}\r\n          >\r\n            New Conversation\r\n          </Button>\r\n        </div>\r\n\r\n        <div style={{ flex: '1 1 auto', padding: '10px', overflowY: 'auto' }}>\r\n          {chats.map((chat, idx) => (\r\n            <div key={idx} className=\"position-relative mb-2\">\r\n              <Button\r\n                variant=\"dark\"\r\n                className={`w-100 text-start text-white rounded ${activeChatIndex === idx ? 'border border-success' : ''}`}\r\n                style={{ borderRadius: '10px', backgroundColor: 'transparent' }}\r\n                onClick={() => switchChat(idx)}\r\n                onMouseEnter={(e) => (e.currentTarget.style.border = '1px solid #475569')}\r\n                onMouseLeave={(e) => {\r\n                  if (activeChatIndex !== idx) {\r\n                    e.currentTarget.style.border = '1px solid transparent';\r\n                  }\r\n                }}\r\n              >\r\n                {chat.title}\r\n                <span\r\n                  className=\"position-absolute end-0 top-0 mt-1 me-1\"\r\n                  style={{ cursor: 'pointer', padding: '2px 6px' }}\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    deleteChat(idx);\r\n                  }}\r\n                  onMouseEnter={(e) => (e.currentTarget.style.background = 'red')}\r\n                  onMouseLeave={(e) => (e.currentTarget.style.background = 'transparent')}\r\n                >\r\n                  &#x1F5D1;\r\n                </span>\r\n              </Button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div style={{ flex: '0 0 5%', borderTop: '1px solid #334155' }} className=\"d-flex align-items-center px-2\">\r\n          <small className=\"text-white\">FinanceGPT v1.0</small>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chat area */}\r\n      <div\r\n        className=\"d-flex flex-column\"\r\n        style={{\r\n          flex: '1 1 auto',\r\n          backgroundColor: '#0b1a2b',\r\n          overflow: 'hidden',\r\n        }}\r\n      >\r\n        {/* Messages container: 70% width, centered, scrollable */}\r\n        <div\r\n          className=\"no-scrollbar\"\r\n          style={{\r\n            width: '70%',\r\n            margin: '0 auto',\r\n            flex: '1 1 auto',\r\n            padding: '10px',\r\n            overflowY: 'auto',\r\n            overflowX: 'hidden',\r\n          }}\r\n        >\r\n          {messages.map((msg, idx) => (\r\n            <div\r\n              key={idx}\r\n              className={`mb-2 d-flex ${msg.from === 'bot' ? 'justify-content-start' : 'justify-content-end'}`}\r\n            >\r\n              <div\r\n                style={{\r\n                  backgroundColor: msg.from === 'bot' ? '#1e293b' : '#10b981',\r\n                  color: 'white',\r\n                  padding: '10px',\r\n                  borderRadius: '10px',\r\n                  maxWidth: '75%',\r\n                }}\r\n              >\r\n                <div>{msg.text}</div>\r\n                {msg.from === 'bot' && msg.showVideo && msg.video && (\r\n                  <div className=\"mt-2\">\r\n                    <iframe\r\n                      width=\"100%\"\r\n                      height=\"400\"\r\n                      src={msg.video}\r\n                      title=\"Related Video\"\r\n                      frameBorder=\"0\"\r\n                      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                      allowFullScreen\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {isTyping && (\r\n            <div className=\"d-flex justify-content-start\">\r\n              <div\r\n                style={{\r\n                  backgroundColor: '#1e293b',\r\n                  color: 'white',\r\n                  padding: '10px',\r\n                  borderRadius: '10px',\r\n                  maxWidth: '75%',\r\n                }}\r\n              >\r\n                Typing{typingDots}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Input bar: centered 70%, input fills available space */}\r\n        <div\r\n          className=\"p-3 border-top d-flex justify-content-center\"\r\n          style={{ backgroundColor: '#0f172a', flex: '0 0 auto' }}\r\n        >\r\n          <div style={{ width: '70%', display: 'flex' }}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control me-2\"\r\n              placeholder=\"Ask your finance coach...\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n              style={{ flexGrow: 1 }}\r\n            />\r\n            <Button variant=\"success\" onClick={sendMessage}>\r\n              Send\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    {/* Auth Modal */}\r\n    {showAuthModal && (\r\n      <div className=\"modal fade show\" style={{ display: 'block', backgroundColor: 'rgba(0,0,0,0.5)' }}>\r\n        <div className=\"modal-dialog modal-dialog-centered\" style={{ maxWidth: '400px' }}>\r\n          <div className=\"modal-content\" style={{ backgroundColor: '#1e293b', color: 'white', textAlign: 'center', height: '350px' }}>\r\n            <div className=\"modal-header justify-content-between border-0 px-4\">\r\n              <h5 className=\"modal-title mx-auto\">Hotel FinanceGPT</h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close btn-close-white\"\r\n                onClick={() => setShowAuthModal(false)}\r\n                style={{ position: 'absolute', right: '1rem', top: '1rem' }}\r\n              />\r\n            </div>\r\n            <div className=\"modal-body d-flex flex-column justify-content-start px-4\" style={{ flexGrow: 1, paddingTop: '30px' }}>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-3 text-center\"\r\n                placeholder=\"Username\"\r\n                value={username}\r\n                onChange={(e) => setUser(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control mb-4 text-center\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setKey(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer justify-content-center border-0 pb-4\">\r\n              <Button variant=\"success\" onClick={login} className=\"me-2\">\r\n                Login\r\n              </Button>\r\n              <Button variant=\"outline-light\" onClick={signup}>\r\n                Sign up\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}